name: S3 Hosted Website Update

on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build website
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=ort-devops-2023s2g1
            -Dsonar.projectKey=ORT-DevOps-2023S2G1_web-app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Install dependencies
        run: npm install
      
      - name: Test code
        run: npm run test

      - name: Build app
        run: npm run build

      - name: Upload Artifact with site files
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist

  deploy_on_dev:
    needs: build
    runs-on: ubuntu-latest
    
    name: Deploy on DEV Environment
    steps:
      - uses: actions/checkout@v4
      
      - name: Wait for approval
        uses: ORT-DevOps-2023S2G1/manual-approval@develop
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: mgonzalezgallo, GonzaFernandez
          minimum-approvals: 1
          issue-title: "Deploying website on DEV environment"
          issue-body: "Please approve or deny the deployment"

      - name: Download artifact with JAR file
        uses: actions/download-artifact@v3
        with:
          name: build
          path: dist
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Deploy Amazon ECS task definition
        run: |
          aws s3 sync dist/ s3://dev-webapp-ort --delete
          
  deploy_on_stg:
    needs: deploy_on_dev
    runs-on: ubuntu-latest
    
    name: Deploy on STG Environment
    steps:
      - uses: actions/checkout@v4
      
      - name: Wait for approval
        uses: ORT-DevOps-2023S2G1/manual-approval@develop
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: devops
          minimum-approvals: 1
          issue-title: "Deploying website on STG environment"
          issue-body: "Please approve or deny the deployment"

      - name: Download artifact with JAR file
        uses: actions/download-artifact@v3
        with:
          name: build
          path: dist
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Deploy Amazon ECS task definition
        run: |
          aws s3 sync dist/ s3://stg-webapp-ort --delete

  deploy_on_prd:
    needs: deploy_on_stg
    runs-on: ubuntu-latest
    
    name: Deploy on PRD Environment
    steps:
      - uses: actions/checkout@v4
      
      - name: Wait for approval
        uses: ORT-DevOps-2023S2G1/manual-approval@develop
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: mgonzalezgallo
          issue-title: "Deploying website on PRD environment"
          issue-body: "Please approve or deny the deployment"

      - name: Download artifact with JAR file
        uses: actions/download-artifact@v3
        with:
          name: build
          path: dist
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Deploy Amazon ECS task definition
        run: |
          aws s3 sync dist/ s3://prd-webapp-ort --delete
